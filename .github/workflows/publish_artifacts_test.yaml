name: Publish artifacts to GCS

#on: workflow_dispatch
on:
  push:
    branches:
      - dev

jobs:
  ###
  # Get release version from build context
  ###
  release_version:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
    steps:
    - name: Set output
      id: vars
      run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
    - name: Check output
      env:
        RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
      run: |
        echo $RELEASE_VERSION
        echo ${{ steps.vars.outputs.tag }}

  ###
  # Publish gstreamer artifacts to GCS
  ###
  publish_gstreamer_artifacts_to_gcs:
    needs:
    - release_version
    runs-on: ubuntu-latest
    steps:
    - name: Publish Artifacts
      env:
        RELEASE_VERSION: ${{ needs.release_version.outputs.tag }}
        GCS_SA_KEY: ${{ secrets.GCP_ACTIONS_SA_KEY }}
      run: |
        # GHCR Login
        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

        # GCS Login
        cat - > /tmp/sa_key.json <<EOF
        ${{ secrets.GCP_ACTIONS_SA_KEY }}
        EOF
        gcloud -q auth activate-service-account --key-file /tmp/sa_key.json

        # Docker create
        docker create --name copy ghcr.io/selkies-project/selkies-gstreamer/gstreamer:${RELEASE_VERSION}
        
        # Docker copy and create tarball
        docker cp copy:/opt/selkies-gstreamer-latest.tgz /tmp/selkies-gstreamer-${RELEASE_VERSION}.tgz

        # Docker rm
        docker rm copy

        # Copy to GCS
        gsutil cp /tmp/selkies-gstreamer-${RELEASE_VERSION}.tgz gs://selkies-project-releases/selkies-gstreamer/

  ###
  # Publish gst-py artifacts to GCS
  ###
  publish_gst_py_artifacts_to_gcs:
    needs:
    - release_version
    runs-on: ubuntu-latest
    steps:
    - name: Publish Artifacts
      env:
        RELEASE_VERSION: ${{ needs.release_version.outputs.tag }}
        GCS_SA_KEY: ${{ secrets.GCP_ACTIONS_SA_KEY }}
        PYPI_PACKAGE: selkies_gstreamer_disla
        # TODO: get this from release tag
        BUILD_VERSION: 1.0.0rc0
      run: |
        # GHCR Login
        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

        # GCS Login
        cat - > /tmp/sa_key.json <<EOF
        ${{ secrets.GCP_ACTIONS_SA_KEY }}
        EOF
        gcloud -q auth activate-service-account --key-file /tmp/sa_key.json

        # Docker create
        docker create --name copy ghcr.io/selkies-project/selkies-gstreamer/py-build:${RELEASE_VERSION}
        
        # Docker copy and create tarball
        docker cp copy:/opt/pypi/dist/${PYPI_PACKAGE}-${BUILD_VERSION}-py3-none-any.whl /tmp/${PYPI_PACKAGE}-${BUILD_VERSION}-py3-none-any.whl

        # Docker rm
        docker rm copy

        # Copy to GCS
        gsutil cp /tmp/${PYPI_PACKAGE}-${BUILD_VERSION}-py3-none-any.whl gs://selkies-project-releases/selkies-gstreamer/

  ###
  # Publish gst-web artifacts to GCS
  ###
  publish_gst_web_artifacts_to_gcs:
    needs:
    - release_version
    runs-on: ubuntu-latest
    steps:
    - name: Publish Artifacts
      env:
        RELEASE_VERSION: ${{ needs.release_version.outputs.tag }}
        GCS_SA_KEY: ${{ secrets.GCP_ACTIONS_SA_KEY }}
      run: |
        # GHCR Login
        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

        # GCS Login
        cat - > /tmp/sa_key.json <<EOF
        ${{ secrets.GCP_ACTIONS_SA_KEY }}
        EOF
        gcloud -q auth activate-service-account --key-file /tmp/sa_key.json

        # Docker create
        docker create --name copy ghcr.io/selkies-project/selkies-gstreamer/gst-web:${RELEASE_VERSION}
        
        # Docker copy and create tarball
        (cd /tmp && docker cp copy:/usr/share/nginx/html ./gst-web && tar zcvf /tmp/selkies-gstreamer-web-${RELEASE_VERSION}.tgz gst-web)

        # Docker rm
        docker rm copy

        # Copy to GCS
        gsutil cp /tmp/selkies-gstreamer-web-${RELEASE_VERSION}.tgz gs://selkies-project-releases/selkies-gstreamer/
